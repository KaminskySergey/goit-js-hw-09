{"mappings":"iiBACA,IAMIA,EACAC,EACAC,EARJC,EAAAC,EAAA,SAaA,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GActC,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GAEpCC,YAAW,WACNN,EACDI,EAAQ,CAACN,WAAUC,UAGnBM,EAAO,CAACP,WAAUC,S,GAEnBP,E,IAtBMe,SAASC,cAAc,SAM/BC,iBAAiB,UAuBtB,SAAsBC,GACpBA,EAAIC,iBACJnB,EAAcoB,OAAOF,EAAIG,OAAOC,SAASf,MAAMgB,OAE/CtB,EAAYmB,OAAOF,EAAIG,OAAOC,SAASE,KAAKD,OAE5CrB,EAAckB,OAAOF,EAAIG,OAAOC,SAASG,OAAOF,OAGhD,IAAI,IAAIG,EAAI,EAAGA,GAAKxB,EAAawB,GAAK,EAIpCrB,EAAcqB,EAAG1B,GAChB2B,MAAK,SAAAC,G,IAAEtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAChBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGvE0B,OAAM,SAAAL,G,IAAEtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGrEP,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\n\n\nconst form = document.querySelector('.form')\n\nlet delayInput\nlet stepInput\nlet amountInput\n\nform.addEventListener('submit', onFormSubmit)\n\n\nfunction createPromise(position, delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n  \n  const promise = new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      if(shouldResolve){\n        resolve({position, delay});\n      }\n      else{\n        reject({position, delay});\n      }\n    }, delayInput);\n  })\n  \n  return promise;\n}\n\n\nfunction onFormSubmit(evt){\n  evt.preventDefault()\n  delayInput =  Number(evt.target.elements.delay.value);\n  // console.log(delayInput)\n  stepInput = Number(evt.target.elements.step.value);\n  // console.log(stepInput)\n  amountInput = Number(evt.target.elements.amount.value)\n  // console.log(amountInput)\n\n  for(let i = 1; i <= amountInput; i += 1){\n    // console.log(amountInput)\n    // console.log(stepInput)\n    // console.log(delayInput)\n    createPromise(i, delayInput)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      \n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      \n    })\n    delayInput += stepInput\n  }\n  \n}\n\n\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","Number","target","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ea0981fe.js.map"}