{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAMA,IAAIC,EACAC,EACAC,EAKJ,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACNN,EACDI,EAAQ,C,SAACN,E,MAAUC,IAGnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BL,EAAW,G,CAtBLa,SAASC,cAAc,SAM/BC,iBAAiB,UAuBtB,SAAsBC,GACpBA,EAAIC,iBACJjB,EAAckB,OAAOF,EAAIG,OAAOC,SAASf,MAAMgB,OAE/CpB,EAAYiB,OAAOF,EAAIG,OAAOC,SAASE,KAAKD,OAE5CnB,EAAcgB,OAAOF,EAAIG,OAAOC,SAASG,OAAOF,OAGhD,IAAI,IAAIG,EAAI,EAAGA,GAAKtB,EAAasB,GAAK,EAIpCrB,EAAcqB,EAAGxB,GAChByB,MAAK,EAACrB,SAACA,EAAQC,MAAEA,MAChBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAGzEwB,OAAM,EAACzB,SAACA,EAAQC,MAAEA,MACjBqB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAGvEL,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\n\n\nconst form = document.querySelector('.form')\n\nlet delayInput\nlet stepInput\nlet amountInput\n\nform.addEventListener('submit', onFormSubmit)\n\n\nfunction createPromise(position, delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      if(shouldResolve){\n        resolve({position, delay});\n      }\n      else{\n        reject({position, delay});\n      }\n    }, delayInput);\n  })\n  \n  \n}\n\n\nfunction onFormSubmit(evt){\n  evt.preventDefault()\n  delayInput =  Number(evt.target.elements.delay.value);\n  // console.log(delayInput)\n  stepInput = Number(evt.target.elements.step.value);\n  // console.log(stepInput)\n  amountInput = Number(evt.target.elements.amount.value)\n  // console.log(amountInput)\n\n  for(let i = 1; i <= amountInput; i += 1){\n    // console.log(amountInput)\n    // console.log(stepInput)\n    // console.log(delayInput)\n    createPromise(i, delayInput)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      \n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      \n    })\n    delayInput += stepInput\n  }\n  \n}\n\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","Number","target","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.3704c446.js.map"}